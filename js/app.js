// Generated by CoffeeScript 1.3.3
(function() {
  var App;

  App = {
    currentImage: 0,
    init: function() {
      var _this = this;
      _.bindAll(this);
      this.iOS = false;
      if (navigator.userAgent.match(/(iPad|iPhone|iPod)/i)) {
        this.iOS = true;
      }
      _.each($('.image'), this.loadImage);
      _.each($('.full-image'), this.loadImage);
      if (this.iOS) {
        $('body').addClass('ios');
        this.hammer = new Hammer($('body')[0], {
          drag: true,
          drag_vertical: true,
          drag_horizontal: false,
          drag_min_distance: 0,
          preventDefault: true,
          transform: false,
          tap: false,
          tap_double: false,
          hold: false
        });
        this.hammer.ondragend = function(ev) {
          if (ev.direction === 'up') {
            _this.nextImage();
          }
          if (ev.direction === 'down') {
            _this.previousImage();
          }
        };
        this.hammer.onswipe = function(ev) {
          if (ev.direction === 'up') {
            _this.nextImage();
          }
          if (ev.direction === 'down') {
            _this.previousImage();
          }
        };
      } else {
        setInterval(this.position, 24);
      }
      Mousetrap.bind('left', this.previousImage);
      Mousetrap.bind('right', this.nextImage);
      Mousetrap.bind('up', this.previousImage);
      Mousetrap.bind('down', this.nextImage);
      Mousetrap.bind('j', this.nextImage);
      Mousetrap.bind('k', this.previousImage);
      $('a.sound').bind('click', this.toggleSound);
      $('a.to-credits').bind('click', this.toCredits);
      if (!this.iOS) {
        this.initAudio();
        this.initVideo();
      }
    },
    loadImage: function(el) {
      var $el, $i, i, src;
      $el = $(el);
      src = $el.data('src');
      i = new Image();
      i.src = src;
      $i = $(i);
      $el.append(i);
    },
    position: function(e) {
      var $el, h, scrollTop, y;
      if ($.browser.mozilla) {
        $el = $('html');
      } else {
        $el = $('body');
      }
      scrollTop = $el.scrollTop();
      h = $('#left').height();
      y = scrollTop;
      if (scrollTop >= h) {
        $el.scrollTop(0);
      }
      $('#right').css({
        top: "" + y + "px"
      });
    },
    nextImage: function() {
      this.showImage(this.currentImage + 1);
      return false;
    },
    previousImage: function() {
      this.showImage(this.currentImage - 1);
      return false;
    },
    showImage: function(n) {
      var $el;
      if (n < 0) {
        return;
      }
      if (n > 13) {
        return;
      }
      if ($.browser.mozilla) {
        $el = $('html');
      } else {
        $el = $('body');
      }
      if (this.iOS) {
        $('#left').animate({
          top: -n * 1000
        }, 420);
        $('#right').animate({
          top: n * 1000
        }, 420);
      } else {
        $el.animate({
          scrollTop: n * 1000
        }, 420);
      }
      this.currentImage = n;
      if (n === 12) {
        if (!this.iOS) {
          this.player.api('play');
        }
        if (!this.iOS) {
          this.audio.pause();
        }
        if (!this.iOS) {
          $('a.sound').addClass('off').text('sound on');
        }
      }
    },
    toCredits: function(e) {
      e.preventDefault();
      this.showImage(13);
    },
    initVideo: function() {
      var iframe,
        _this = this;
      iframe = $('#vimeoplayer')[0];
      this.player = $f(iframe);
      this.player.addEvent('play', function() {
        _this.player.api('play');
        _this.audio.pause();
        $('a.sound').addClass('off').text('sound on');
      });
    },
    initAudio: function() {
      this.audio = new buzz.sound('/audio/27names2012final1', {
        formats: ['mp3', 'ogg', 'aac']
      });
      this.audio.play();
    },
    pauseAudio: function() {
      var $el;
      if (this.iOS) {
        return;
      }
      this.audio.pause();
      $el = $('a.sound');
      $el.text('sound off');
      $el.removeClass('off');
    },
    toggleSound: function(e) {
      var $el;
      if (this.iOS) {
        return;
      }
      e.preventDefault();
      $el = $(e.target);
      if ($el.hasClass('off')) {
        $el.removeClass('off');
        this.audio.play();
        $el.text('sound off');
      } else {
        $el.addClass('off');
        this.audio.pause();
        $el.text('sound on');
      }
    }
  };

  App.init();

}).call(this);
